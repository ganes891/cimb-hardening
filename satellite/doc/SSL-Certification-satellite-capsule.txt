SSL certification for satellite server --> ssuatlrhelsat01.rhbbank.com.sg and capsule --->  ssuatlrhelsat02.rhbbank.com.sg

mkdir /root/satellite_cert/

check the current self signed cert :
#openssl x509 -in /etc/pki/katello/certs/katello-apache.crt -text | egrep '(Issuer:|Subject:|CA:|DNS:|Digital|Not Before|Not After)'

#openssl genrsa -out /root/satellite_cert/satellite_cert_key.pem

#openssl.conf  --> Get this file from AD team.

#openssl req -new -key /root/satellite_cert/satellite_cert_key.pem -config /root/satellite_cert/openssl.conf -out /root/satellite_cert/satellite_cert_csr.pem

now need to share satellite_cert_key.pem and satellite_cert_csr.pem to AD team to get "satellite_cert.pem" and "ca_cert_bundle.pem"

# openssl  x509 -in satellite_cert.pem -text -noout -- > to verify

====================On SATELLITE=================

1.
#katello-certs-check -c /root/satellite_cert/satellite_cert.pem -k /root/satellite_cert/satellite_cert_key.pem -b /root/satellite_cert/ca_cert_bundle.pem  
 
2. 

To update the certificates on a currently running Red Hat Satellite installation, run:

  satellite-installer --scenario satellite \
    --certs-server-cert "/root/satellite_cert/satellite_cert.pem" \
    --certs-server-key "/root/satellite_cert/satellite_cert_key.pem" \
    --certs-server-ca-cert "/root/satellite_cert/ca_cert_bundle.pem" \
    --certs-update-server --certs-update-server-ca


3. On a computer with network access to Satellite Server, navigate to the following URL: https://satellite.example.com.

4. In your browser, view the certificate details to verify the deployed certificate.

6. now cross check again --> openssl x509 -in /etc/pki/katello/certs/katello-apache.crt -text | egrep '(Issuer:|Subject:|CA:|DNS:|Digital|Not Before|Not After)'

7. openssl x509 -in /etc/foreman-proxy/ssl_cert.pem -text | egrep '(Issuer:|Subject:|CA:|DNS:|Digital|Not Before|Not After)'

===========================================================================
Client node:


#subscription-manager identity

# yum remove katello-ca-consumer*

# katello-ca-consumer install --> dnf install http://satellite.example.com/pub/katello-ca-consumer-latest.noarch.rpm

# yum localinstall http://katello.example.com/pub/katello-ca-consumer-latest.noarch.rpm

# yum clean all

#subscription-manager refresh

#subscription-manager identity

# yum repolist

==================================++++++++++++++++++++++++++===================

SSL update For capsule:

(on satellite server itself)

#hammer capsule list


SSL certification for capsule server

mkdir /root/capsule_cert/

check the current self signed cert :
#openssl x509 -in /etc/pki/katello/certs/katello-apache.crt -text | egrep '(Issuer:|Subject:|CA:|DNS:|Digital|Not Before|Not After)'
 
#openssl genrsa -out /root/capsule_cert/capsule_cert_key.pem 4096

#openssl.conf  --> Get this file from AD team.

#openssl req -new -key /root/capsule_cert/capsule_cert_key.pem -config /root/capsule_cert/openssl.conf -out /root/capsule_cert/capsule_cert_csr.pem

# now need to share capsule_cert_key.pem and capsule_cert_csr.pem to AD team to get "capsule_cert.pem" and "ca_cert_bundle.pem"

# openssl  x509 -in capsule_cert.pem -text -noout -- > to verify


1.
#katello-certs-check -c /root/capsule_cert/capsule_cert.pem -k /root/capsule_cert/capsule_cert_key.pem -b /root/capsule_cert/ca_cert_bundle.pem  
 
2. 

To update the certificates on a currently running Red Hat capsule installation, run:

3. run the export command ----> CAPSULE=ssuatlrhelsat02.rhbbank.com.sg

4.
capsule-certs-generate --foreman-proxy-fqdn "$CAPSULE" \
--certs-tar  "~/$CAPSULE-certs.tar" \
--server-cert "/root/capsule_cert/capsule_cert.pem" \
--server-key "/root/capsule_cert/capsule_cert_key.pem" \
--server-ca-cert "/root/capsule_cert/ca_cert_bundle.pem" \
--certs-update-server




5. scp /root/ssuatlrhelsat02.rhbbank.com.sg-certs.tar root@ssuatlrhelsat02.rhbbank.com.sg:/root/ssuatlrhelsat02.rhbbank.com.sg-certs.tar

6. katello-ca-consumer install dnf install http://satellite.example.com/pub/katello-ca-consumer-latest.noarch.rpm

note: On capsule server:
7. 
  satellite-installer\
                    --scenario capsule\
                    --certs-tar-file                              "/root/ssuatlrhelsat02.rhbbank.com.sg-certs.tar"\
                    --foreman-proxy-register-in-foreman           "true"\
                    --foreman-proxy-foreman-base-url              "https://ssuatlrhelsat01.rhbbank.com.sg"\
                    --foreman-proxy-trusted-hosts                 "ssuatlrhelsat01.rhbbank.com.sg"\
                    --foreman-proxy-trusted-hosts                 "ssuatlrhelsat02.rhbbank.com.sg"\
                    --foreman-proxy-oauth-consumer-key            "W6H4xqzLQSQLWKCMhRNQD2uQ8cz6aXt4"\
                    --foreman-proxy-oauth-consumer-secret         "SvcAXxpuTaSinM2EYnGWL7BmeLLv2di3"
[root@SSUATLRHELSAT01 capsule_cert]#
########################BElow error###########
2023-10-30 16:23:56 [NOTICE] [root] Loading installer configuration. This will take some time.
2023-10-30 16:24:01 [NOTICE] [root] Running installer with log based terminal output at level NOTICE.
2023-10-30 16:24:01 [NOTICE] [root] Use -l to set the terminal output log level to ERROR, WARN, NOTICE, INFO, or DEBUG. See --full-help for definitions.
2023-10-30 16:24:08 [NOTICE] [configure] Starting system configuration.
2023-10-30 16:24:20 [ERROR ] [configure] Could not prefetch package provider 'dnfmodule': Execution of '/usr/bin/dnf module list -d 0 -e 1' returned 1: Error: Failed to download metadata for repo 'ansible-2-for-rhel-8-x86_64-rpms': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried
2023-10-30 16:24:20 [NOTICE] [configure] 250 configuration steps out of 1131 steps complete.
2023-10-30 16:24:22 [NOTICE] [configure] 500 configuration steps out of 1136 steps complete.
2023-10-30 16:24:23 [NOTICE] [configure] 750 configuration steps out of 1138 steps complete.
2023-10-30 16:24:23 [NOTICE] [configure] 1000 configuration steps out of 1140 steps complete.
2023-10-30 16:24:26 [NOTICE] [configure] System configuration has finished.

  There were errors detected during install.
  Please address the errors and re-run the installer to ensure the system is properly configured.
  Failing to do so is likely to result in broken functionality.

  The full log is at /var/log/foreman-installer/capsule.log




==========> login to capsule and perform below.


6. now cross check again --> openssl x509 -in /etc/pki/katello/certs/katello-apache.crt -text | egrep '(Issuer:|Subject:|CA:|DNS:|Digital|Not Before|Not After)'



======================================================================
for ssuatlrhelsat01.rhbbank.com.sg

[ req ]
req_extensions = v3_req
distinguished_name = req_distinguished_name
x509_extensions = usr_cert
prompt = no

[ req_distinguished_name ]
C  = SG
ST = Singapore
L  = Singapore
O  = RHBBANK
OU = IT
CN = ssuatlrhelsat01.rhbbank.com.sg

[ v3_req ]
basicConstraints = CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
extendedKeyUsage = serverAuth, clientAuth, codeSigning, emailProtection
subjectAltName = @alt_names

[ usr_cert ]
basicConstraints=CA:FALSE
nsCertType = client, server, email
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth, clientAuth, codeSigning, emailProtection
nsComment = "OpenSSL Generated Certificate"
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

[ alt_names ]
DNS.1 = ssuatlrhelsat01.rhbbank.com.sg


==========
capsule: ssuatlrhelsat02.rhbbank.com.sg

[ req ]
req_extensions = v3_req
distinguished_name = req_distinguished_name
x509_extensions = usr_cert
prompt = no

[ req_distinguished_name ]
C  = SG
ST = Singapore
L  = Singapore
O  = RHBBANK
OU = IT
CN = ssuatlrhelsat02.rhbbank.com.sg

[ v3_req ]
basicConstraints = CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
extendedKeyUsage = serverAuth, clientAuth, codeSigning, emailProtection
subjectAltName = @alt_names

[ usr_cert ]
basicConstraints=CA:FALSE
nsCertType = client, server, email
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth, clientAuth, codeSigning, emailProtection
nsComment = "OpenSSL Generated Certificate"
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

[ alt_names ]
DNS.1 = ssuatlrhelsat02.rhbbank.com.sg


------------------------------------------

==================
Sat01:
bundle: required
==
openssl pkcs7 -print_certs -in ssuatlrhelsat01.p7b  -out ca_cert_bundle.pem

server cert:
openssl x509 -in ssuatlrhelsat01.cer -out ssuatlrhelsat01.der -outform DER
openssl x509 -in ssuatlrhelsat01.der -inform DER -out satellite_cert.pem -outform PEM

cat satellite_cert.pem >> ca_cert_bundle.pem

==
Sat02:
bundle: required

====

openssl pkcs7 -print_certs -in ssuatlrhelsat02.p7b  -out ca_cert_bundle.pem
server cert:
openssl x509 -in ssuatlrhelsat02.cer -out ssuatlrhelsat02.der -outform DER
openssl x509 -in ssuatlrhelsat02.der -inform DER -out capsule_cert.pem -outform PEM

cat capsule_cert.pem >> ca_cert_bundle.pem

>>>>>repeat the same step for prod SAT/CAPSULE servers to generate the same>>>>>>>

=====================

